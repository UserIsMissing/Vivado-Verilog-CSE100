`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 11/21/2023 03:17:29 PM
// Design Name: 
// Module Name: Top_Level
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

module Top_Level(
    input btnU, btnD, btnC, btnL, btnR,     // btnC is global reset (not btnR)
    input [15:0] sw,
    input clkin,

    output dp,
    output [6:0] seg,
    output [3:0] an,
    output [15:0] led,

    output Hsync, Vsync,
    output [3:0] vgaBlue,
    output [3:0] vgaGreen,
    output [3:0] vgaRed
    );

    wire clk, digsel;
    labVGA_clks not_so_slow (.clkin(clkin), .greset(btnC), .clk(clk), .digsel(digsel));

    wire [3:0] Red, Green, Blue;

    wire btnU_Click, btnD_Click, btnC_Click, btnL_Click, btnR_Click;
    FDRE #(.INIT(1'b0)) buttonU (.C(clk), .R(1'b0), .CE(1'b1), .D(btnU), .Q(btnU_Click));
    FDRE #(.INIT(1'b0)) buttonD (.C(clk), .R(1'b0), .CE(1'b1), .D(btnD), .Q(btnD_Click));
    FDRE #(.INIT(1'b0)) buttonC (.C(clk), .R(1'b0), .CE(1'b1), .D(btnC), .Q(btnC_Click));
    FDRE #(.INIT(1'b0)) buttonL (.C(clk), .R(1'b0), .CE(1'b1), .D(btnL), .Q(btnL_Click));
    FDRE #(.INIT(1'b0)) buttonR (.C(clk), .R(1'b0), .CE(1'b1), .D(btnR), .Q(btnR_Click));
 
 
    wire [15:0] Vrow, Hcol;
    // wire Active_Region;
    // Pixels PixelAddress (.clk(clk), .Vert(Vrow), .Horiz(Hcol), .Hsync(Hsync), .Vsync(Vsync));     //, .Active_Region());  //  .vgaGreen(Green), .vgaRed(Red), .vgaBlue(Blue));
    Pixels PixelAddress (.clk(clk), .Vert(Vrow), .Horiz(Hcol), .Hsync(Hsync), .Vsync(Vsync), .vgaGreen(Green), .vgaRed(Red), .vgaBlue(Blue));
    // ^^^^^^ I couldnt display anything because that was called "PixelAddress". had to change to pixel

    wire border;
    Border TheBorder (.clk(clk), .GreenWall(border), .Horizontal(Hcol), .Vertical(Vrow));
    assign vgaGreen = Green & {4{border}};
    
    wire frame;
    Edge_Detector TheFrame (.clk(clk), .btnU(Vsync), .Edge_out(frame));



/////////////////////////////////         Ball Makin Stuff       \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    wire [3:0] BallRed [3:0];
    wire [3:0] BallBlue [3:0];
    wire MemRed [3:0];
    wire MemBlue [3:0];

    // assign vgaRed = (BallRed[0] | MemRed[0]) | (BallRed[1] | MemRed[1]) | (BallRed[2] | MemRed[2]) | (BallRed[3] | MemRed[3]);
    // assign vgaBlue = (BallBlue[0] | MemBlue[0]) | (BallBlue[1] | MemBlue[1]) | (BallBlue[2] | MemBlue[2]) | (BallBlue[3] | MemBlue[3]);


    // Ball 1 Red
    Balls_Moving MoveBall_1 (.clk(clk), .btnU(btnU), .btnR(btnR_Click), .btnL(btnL_Click), .Hpixel(Hcol), .Vpixel(Vrow), .frame(frame), 
                                    .MemRed(MemRed[0]), .MemBlue(MemBlue[0]), .vgaRed(Red[0]), .MakeBall1(BallRed[0]));
    // Ball 2 Red
    Balls_Moving MoveBall_2 (.clk(clk), .btnU(btnU), .btnR(btnR_Click), .btnL(btnL_Click), .Hpixel(Hcol), .Vpixel(Vrow), .frame(frame), 
                                    .MemRed(MemRed[1]), .MemBlue(MemBlue[1]), .vgaRed(Red[1]), .MakeBall2(BallRed[1]));
    // Ball 3 Red
    Balls_Moving MoveBall_3 (.clk(clk), .btnU(btnU), .btnR(btnR_Click), .btnL(btnL_Click), .Hpixel(Hcol), .Vpixel(Vrow), .frame(frame), 
                                    .MemRed(MemRed[2]), .MemBlue(MemBlue[2]), .vgaRed(Red[2]), .MakeBall3(BallRed[2]));
    // Ball 4 Red
    Balls_Moving MoveBall_4 (.clk(clk), .btnU(btnU), .btnR(btnR_Click), .btnL(btnL_Click), .Hpixel(Hcol), .Vpixel(Vrow), .frame(frame), 
                                    .MemRed(MemRed[3]), .MemBlue(MemBlue[3]), .vgaRed(Red[3]), .MakeBall4(BallRed[3]));                                                                        

    // Ball 5 Blue
    Balls_Moving MoveBall_5 (.clk(clk), .btnU(btnU), .btnR(btnR_Click), .btnL(btnL_Click), .Hpixel(Hcol), .Vpixel(Vrow), .frame(frame), 
                                    .MemRed(MemRed[4]), .MemBlue(MemBlue[4]), .vgaRed(Red[4]), .MakeBall5(BallBlue[0]));
    // Ball 6 Blue
    Balls_Moving MoveBall_6 (.clk(clk), .btnU(btnU), .btnR(btnR_Click), .btnL(btnL_Click), .Hpixel(Hcol), .Vpixel(Vrow), .frame(frame), 
                                    .MemRed(MemRed[5]), .MemBlue(MemBlue[5]), .vgaRed(Red[5]), .MakeBall6(BallBlue[1]));
    // Ball 7 Blue
    Balls_Moving MoveBall_7 (.clk(clk), .btnU(btnU), .btnR(btnR_Click), .btnL(btnL_Click), .Hpixel(Hcol), .Vpixel(Vrow), .frame(frame), 
                                    .MemRed(MemRed[6]), .MemBlue(MemBlue[6]), .vgaRed(Red[6]), .MakeBall7(BallBlue[2]));
    // Ball 8 Blue
    Balls_Moving MoveBall_8 (.clk(clk), .btnU(btnU), .btnR(btnR_Click), .btnL(btnL_Click), .Hpixel(Hcol), .Vpixel(Vrow), .frame(frame), 
                                    .MemRed(MemRed[7]), .MemBlue(MemBlue[7]), .vgaRed(Red[7]), .MakeBall8(BallBlue[3]));                                    

    assign vgaRed = ((BallRed[0] | MemRed[0]) | (BallRed[1] | MemRed[1]) | (BallRed[2] | MemRed[2]) | (BallRed[3] | MemRed[3]));
    assign vgaBlue = (BallBlue[0] | MemBlue[0]) | (BallBlue[1] | MemBlue[1]) | (BallBlue[2] | MemBlue[2]) | (BallBlue[3] | MemBlue[3]);            
 
    // wire slow_balls;
    // Edge_Detector slowing_balls (.clk(clk), .btnU(btnU), .Edge_out(slow_balls));

    // assign led [4:0] = NS [4:0];        // Testing Balls_Moving State Machine

endmodule
