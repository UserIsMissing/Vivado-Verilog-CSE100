------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- Original 
//    a
    assign seg[0] = (~n[3]|~n[2]|~n[1]|n[0]) & (~n[3]|n[2]|~n[1]|~n[0]) & (n[3]|~n[2]|n[1]|n[0]) & (n[3]|n[2]|~n[1]|n[0]);
//    b
    assign seg[1] = (~n[3]|n[2]|~n[1]|n[0]) & (~n[3]|n[2]|n[1]|~n[0]) & (n[3]|~n[2]|n[1]|n[0]) & (n[3]|n[2]|~n[1]|~n[0]) & (n[3]|n[2]|n[1]|~n[0]) & (n[3]|n[2]|n[1]|n[0]);
//    c
    assign seg[2] = (~n[3]|~n[2]|n[1]|~n[0]) & (n[3]|n[2]|~n[1]|~n[0]) & (n[3]|n[2]|n[1]|~n[0]) & (n[3]|n[2]|n[1]|n[0]);
//    d
    assign seg[3] = (~n[3]|~n[2]|~n[1]|n[0]) & (~n[3]|n[2]|~n[1]|~n[0]) & (~n[3]|n[2]|n[1]|n[0]) & (n[3]|~n[2]|~n[1]|n[0]) & (n[3]|~n[2]|n[1]|~n[0]) & (n[3]|n[2]|n[1]|n[0]);
//    e
    assign seg[4] = (~n[3]|~n[2]|~n[1]|n[0]) & (~n[3]|~n[2]|n[1]|n[0]) & (~n[3]|n[2]|~n[1]|~n[0]) & (~n[3]|n[2]|~n[1]|n[0]) & (~n[3]|n[2]|n[1]|n[0]) & (n[3]|~n[2]|~n[1]|n[0]);
//    f
    assign seg[5] = (~n[3]|~n[2]|~n[1]|n[0]) & (~n[3]|~n[2]|n[1]|~n[0]) & (~n[3]|~n[2]|n[1]|n[0]) & (~n[3]|n[2]|n[1]|n[0]) & (n[3]|n[2]|~n[1]|n[0]);
//    g
    assign seg[6] = (~n[3]|~n[2]|~n[1]|~n[0]) & (~n[3]|~n[2]|~n[1]|n[0]) & (~n[3]|n[2]|n[1]|n[0]) & (n[3]|n[2]|~n[1]|~n[0]);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- Spaced


//    a
    assign seg[0] = (~n[3] | ~n[2] | ~n[1] | n[0]) & (~n[3] | n[2] | ~n[1] | ~n[0]) & (n[3] | ~n[2] | n[1] | n[0]) & (n[3] | n[2] | ~n[1] | n[0]);
//    b
    assign seg[1] = (~n[3] | n[2] | ~n[1] | n[0]) & (~n[3] | n[2] | n[1] | ~n[0]) & (n[3] | ~n[2] | n[1] | n[0]) & (n[3] | n[2] | ~n[1] | ~n[0]) & (n[3] | n[2] | n[1] | ~n[0]) & (n[3] | n[2] | n[1] | n[0]);
//    c
    assign seg[2] = (~n[3] | ~n[2] | n[1] | ~n[0]) & (n[3] | n[2] | ~n[1] | ~n[0]) & (n[3] | n[2] | n[1] | ~n[0]) & (n[3] | n[2] | n[1] | n[0]);
//    d
    assign seg[3] = (~n[3] | ~n[2] | ~n[1] | n[0]) & (~n[3] | n[2] | ~n[1] | ~n[0]) & (~n[3] | n[2] | n[1] | n[0]) & (n[3] | ~n[2] | ~n[1] | n[0]) & (n[3] | ~n[2] | n[1] | ~n[0]) & (n[3] | n[2] | n[1] | n[0]);
//    e
    assign seg[4] = (~n[3] | ~n[2] | ~n[1] | n[0]) & (~n[3] | ~n[2] | n[1] | n[0]) & (~n[3] | n[2] | ~n[1] | ~n[0]) & (~n[3] | n[2] | ~n[1] | n[0]) & (~n[3] | n[2] | n[1] | n[0]) & (n[3] | ~n[2] | ~n[1] | n[0]);
//    f
    assign seg[5] = (~n[3] | ~n[2] | ~n[1] | n[0]) & (~n[3] | ~n[2] | n[1] | ~n[0]) & (~n[3] | ~n[2] | n[1] | n[0]) & (~n[3] | n[2] | n[1] | n[0]) & (n[3] | n[2] | ~n[1] | n[0]);
//    g
    assign seg[6] = (~n[3] | ~n[2] | ~n[1] | ~n[0]) & (~n[3] | ~n[2] | ~n[1] | n[0]) & (~n[3] | n[2] | n[1] | n[0]) & (n[3] | n[2] | ~n[1] | ~n[0]);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- Swap Fixed


//    a
    assign seg[0] = (~n[3] & ~n[2] & ~n[1] & n[0]) | (~n[3] & n[2] & ~n[1] & ~n[0]) | (n[3] & ~n[2] & n[1] & n[0]) | (n[3] & n[2] & ~n[1] & n[0]);
//    b
    assign seg[1] = (~n[3] & n[2] & ~n[1] & n[0]) | (~n[3] & n[2] & n[1] & ~n[0]) | (n[3] & ~n[2] & n[1] & n[0]) | (n[3] & n[2] & ~n[1] & ~n[0]) | (n[3] & n[2] & n[1] & ~n[0]) | (n[3] & n[2] & n[1] & n[0]);
//    c
    assign seg[2] = (~n[3] & ~n[2] & n[1] & ~n[0]) | (n[3] & n[2] & ~n[1] & ~n[0]) | (n[3] & n[2] & n[1] & ~n[0]) | (n[3] & n[2] & n[1] & n[0]);
//    d
    assign seg[3] = (~n[3] & ~n[2] & ~n[1] & n[0]) | (~n[3] & n[2] & ~n[1] & ~n[0]) | (~n[3] & n[2] & n[1] & n[0]) | (n[3] & ~n[2] & ~n[1] & n[0]) | (n[3] & ~n[2] & n[1] & ~n[0]) | (n[3] & n[2] & n[1] & n[0]);
//    e
    assign seg[4] = (~n[3] & ~n[2] & ~n[1] & n[0]) | (~n[3] & ~n[2] & n[1] & n[0]) | (~n[3] & n[2] & ~n[1] & ~n[0]) | (~n[3] & n[2] & ~n[1] & n[0]) | (~n[3] & n[2] & n[1] & n[0]) | (n[3] & ~n[2] & ~n[1] & n[0]);
//    f
    assign seg[5] = (~n[3] & ~n[2] & ~n[1] & n[0]) | (~n[3] & ~n[2] & n[1] & ~n[0]) | (~n[3] & ~n[2] & n[1] & n[0]) | (~n[3] & n[2] & n[1] & n[0]) | (n[3] & n[2] & ~n[1] & n[0]);
//    g
    assign seg[6] = (~n[3] & ~n[2] & ~n[1] & ~n[0]) | (~n[3] & ~n[2] & ~n[1] & n[0]) | (~n[3] & n[2] & n[1] & n[0]) | (n[3] & n[2] & ~n[1] & ~n[0]);